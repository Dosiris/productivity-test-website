export async function POST(req: Request) {
    try {
        const { messages } = await req.json();

        if (!messages || !Array.isArray(messages)) {
            return new Response(
                JSON.stringify({ error: 'Invalid messages format' }),
                { status: 400 }
            );
        }

        const res = await fetch('https://openrouter.ai/api/v1/chat/completions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${process.env.OPENROUTER_API_KEY}`,
            },
            body: JSON.stringify({
                model: 'openai/gpt-4-turbo',
                messages: [
                    {
                        role: 'system',
                        content: `
              B·∫°n l√† tr·ª£ l√Ω AI th√¢n thi·ªán, chuy√™n h·ªó tr·ª£ ng∆∞·ªùi d√πng trong lƒ©nh v·ª±c "toxic productivity".
              H√£y gi√∫p h·ªç c√¢n b·∫±ng gi·ªØa c√¥ng vi·ªác v√† ngh·ªâ ng∆°i, nh·∫π nh√†ng nh∆∞ m·ªôt ng∆∞·ªùi b·∫°n.
              N·∫øu ng∆∞·ªùi d√πng h·ªèi ngo√†i ch·ªß ƒë·ªÅ, h√£y kh√©o l√©o h∆∞·ªõng h·ªç quay l·∫°i.
            `,
                    },
                    ...messages.map((m: any) => ({
                        role: m.type === 'user' ? 'user' : 'assistant',
                        content: m.content,
                    })),
                ],
            }),
        });

        const data = await res.json();
        const reply =
            data?.choices?.[0]?.message?.content ||
            'Xin l·ªói, m√¨nh ch∆∞a hi·ªÉu √Ω b·∫°n üòÖ';

        return new Response(JSON.stringify({ response: reply }), {
            status: 200,
            headers: { 'Content-Type': 'application/json' },
        });
    } catch (error: any) {
        console.error('‚ùå OpenRouter API error:', error);
        return new Response(
            JSON.stringify({
                error: 'L·ªói khi g·ªçi OpenRouter API',
                details: error.message,
            }),
            { status: 500, headers: { 'Content-Type': 'application/json' } }
        );
    }
}

export async function OPTIONS() {
    return new Response(null, {
        status: 204,
        headers: {
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Methods': 'POST, OPTIONS',
            'Access-Control-Allow-Headers': 'Content-Type, Authorization',
        },
    });
}
